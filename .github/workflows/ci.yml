name: CI

on:
  push:
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake liballegro4-dev libsdl1.2-dev libsdl-image1.2-dev
    - name: Configure
      run: cmake -B build
    - name: Build
      run: cmake --build build
    - name: Install
      run: cmake --install build --prefix "$PWD/pkg"

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        brew update
        brew install cmake sdl12-compat
    - name: Configure
      run: cmake -B build -DENABLE_OPENGL=OFF
    - name: Build
      run: cmake --build build
    - name: Install
      run: cmake --install build --prefix "$PWD/pkg"

  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v4
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
          mingw-w64-x86_64-SDL
          mingw-w64-x86_64-SDL_image
    - name: Configure
      run: cmake -B build
    - name: Build
      run: cmake --build build
    - name: Install
      run: cmake --install build --prefix "$PWD/pkg"

  distcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          automake \
          autoconf \
          libtool \
          pkg-config \
          libgl1-mesa-dev \
          libsdl1.2-dev \
          libsdl-image1.2-dev \
          liballegro4-dev

    - name: Run autogen.sh
      run: ./autogen.sh

    - name: Configure
      run: ./configure

    - name: Create distribution tarball
      run: make distcheck

    - name: Identify tarball
      id: tarball
      run: echo "filename=$(ls guichan-*.tar.gz)" >> $GITHUB_OUTPUT

    - name: Upload tarball as artifact
      uses: actions/upload-artifact@v4
      with:
        name: guichan-dist
        path: ${{ steps.tarball.outputs.filename }}

    - name: Create Release and Upload Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        files: ${{ steps.tarball.outputs.filename }}
